// Generated by CoffeeScript 1.4.0
(function() {
  var callout, charm, client, dgram, msgLine, port, positionForInput, printNewMessage, server, stdin, stylize;

  dgram = require("dgram");

  charm = require('charm')();

  server = dgram.createSocket("udp4");

  client = dgram.createSocket("udp4");

  port = 41234;

  server.bind(port);

  server.addMembership('224.0.0.0');

  charm.pipe(process.stdout);

  charm.reset();

  stylize = function(msg) {
    var matcher, styles;
    styles = {
      blink: 5,
      bold: 1,
      underline: 4,
      black: 30,
      blue: 34,
      cyan: 36,
      green: 32,
      magenta: 35,
      red: 31,
      white: 37,
      yellow: 33
    };
    matcher = /{([a-z]+)}/gi;
    return msg.replace(matcher, function(match, idx) {
      return '[' + styles[idx] + 'm';
    });
  };

  callout = function(msg) {
    return msg.replace(new RegExp('@' + process.argv[2] + '\\b', 'g'), function(match) {
      return '{magenta}' + match + '{white}';
    });
  };

  msgLine = 0;

  printNewMessage = function(msg) {
    if (msgLine > process.stdout.getWindowSize()[1] - 4) {
      msgLine = 0;
      charm.erase('screen');
    }
    msg = callout(msg);
    msg = stylize(msg);
    charm.position(0, ++msgLine);
    charm.write('\u0007');
    charm.write(msg);
    return charm.display('reset');
  };

  positionForInput = function() {
    charm.position(0, process.stdout.getWindowSize()[1] - 2);
    charm.background('blue');
    charm.erase('end');
    charm.position(0, process.stdout.getWindowSize()[1] - 1);
    return charm.background('black');
  };

  positionForInput();

  stdin = process.openStdin();

  stdin.on('data', function(msg) {
    msg = new Buffer("{green}[" + process.argv[2] + "]{white} " + (msg.toString()));
    return client.send(msg, 0, msg.length, port, '224.0.0.0', function(err, bytes) {
      positionForInput();
      return charm.erase('end');
    });
  });

  server.on('message', function(msg, rinfo) {
    printNewMessage(msg.toString());
    return positionForInput();
  });

}).call(this);
